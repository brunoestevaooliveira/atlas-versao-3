version: '3.8'

services:
  # Ambiente de desenvolvimento
  dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "9002:9002"
    volumes:
      # Hot reload - sincroniza código local com container
      - .:/app
      - /app/node_modules
      - /app/.next
    env_file:
      - .env  # Usa o .env local para desenvolvimento
    environment:
      - NODE_ENV=development
    command: npm run dev
    restart: unless-stopped
    networks:
      - app-network

  # Ambiente de produção
  prod:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - NEXT_PUBLIC_FIREBASE_PROJECT_ID=${NEXT_PUBLIC_FIREBASE_PROJECT_ID}
        - NEXT_PUBLIC_FIREBASE_APP_ID=${NEXT_PUBLIC_FIREBASE_APP_ID}
        - NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=${NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET}
        - NEXT_PUBLIC_FIREBASE_API_KEY=${NEXT_PUBLIC_FIREBASE_API_KEY}
        - NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN}
        - NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID}
        - NEXT_PUBLIC_MAPBOX_TOKEN=${NEXT_PUBLIC_MAPBOX_TOKEN}
    ports:
      - "3000:3000"
    env_file:
      # Tenta usar .env.docker.local primeiro (produção)
      # Se não existir, usa .env (desenvolvimento)
      - .env.docker.local
    environment:
      - NODE_ENV=production
    restart: unless-stopped
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
